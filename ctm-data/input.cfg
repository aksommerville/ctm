# Input configuration for The Campaign Trail of the Mummy.
#
# Under the GLX and SDL drivers (all desktop PCs), the keyboard is not configurable here.
# TODO: It must be configurable before we ship!
#
# If a device is connected but not named here, the program will make up a 
# default map and dump it to stdout.
# Copy that, paste it in here, and make whatever changes you like.
# I'll go ahead and describe the format as if you were writing from scratch, 
# but really, you ought to tweak from those prepared defaults.
#
# A device block begins with the device name as reported by the driver, on its own line.
# Any '*' in this name matches any amount of anything.
# Leading and trailing space are ignored.
# Letters are case-insensitive.
# The device block ends with the word "end" on its own line.
# Each line in a device block is INPUT followed by OUTPUT.
#
# INPUT is numeric "TYPE.CODE", whose precise meaning depends on the input driver. (see below)
# Numbers may be decimal or hexadecimal with "0x" prefix.
# 
# OUTPUT is the logical meaning of this button, one of:
#   QUIT
#   UP DOWN LEFT RIGHT
#   PRIMARY SECONDARY TERTIARY PAUSE
#
# For bi-directional axes, OUTPUT may contain two buttons eg "LEFT RIGHT" or "UP DOWN".
#
# Linux (non-SDL) users:
#   INPUT constants can be found in <linux/input.h>.
#   INPUT TYPE is either EV_KEY (1) or EV_ABS (3).
#   INPUT CODE is an "ABS_" constant for type 3, or "KEY_" or "BTN_" for type 1. 
#   (KEY and BTN codes don't overlap).
#   If you need help finding a particular button's ID, try compiling and running
#   'etc/testinput.c', included with CTM's source distribution.
#   If you need a device's name quick:
#     cat /proc/bus/input/devices
#
# SDL users:
#   INPUT TYPE is SDL's event type constant: SDL_KEYDOWN (2), SDL_JOYAXISMOTION (7), or SDL_JOYBUTTONDOWN (10).
#   INPUT CODE is the index, starting at zero.
#   The special keyboard device is named "SDL Keyboard".
#   For keyboards, INPUT CODE is the keysym (see <SDL/SDL_keysym.h>).
#   Sorry, I didn't bother writing a joystick test program for SDL.
#   If it helps, you can use Python's "pygame" module to detect them (pygame is SDL's Python binding).
#
# X11 users:
#   INPUT TYPE is 11 for keyboard. (KeyPress is 2, but that would conflict with SDL).
#   INPUT CODE is the keysym, see <X11/keysymdef.h>.
#   Device name is "X11 Keyboard".
#
# Note that the input codes for Linux and SDL don't overlap, 
# so it's kosher to define both sets in a single block.

#------------------------------------------------------------------------------
# Generic keyboard.
# You can change its name to just '*', but then new joysticks will match it too.
# NOTE: This is only for the evdev driver (Raspberry Pi). Desktop keyboards are not mappable yet.

*Keyboard*

  # evdev
  1.0x1 QUIT
  1.0x1c PAUSE
  1.0x23 LEFT
  1.0x24 DOWN
  1.0x25 UP
  1.0x26 RIGHT
  1.0x2c PRIMARY
  1.0x2d SECONDARY
  1.0x2e TERTIARY
  1.0x39 PAUSE
  1.0x48 UP
  1.0x4b LEFT
  1.0x4c DOWN
  1.0x4d RIGHT
  1.0x50 DOWN
  1.0x52 PRIMARY
  1.0x53 SECONDARY
  1.0x60 TERTIARY
  1.0x63 SCREENSHOT
  1.0x67 UP
  1.0x69 LEFT
  1.0x6a RIGHT
  1.0x6c DOWN

  # SDL
  2.27 QUIT
  2.102 FULLSCREEN
  2.316 SCREENSHOT
  2.273 UP
  2.274 DOWN
  2.276 LEFT
  2.275 RIGHT
  2.122 PRIMARY
  2.120 SECONDARY
  2.99 TERTIARY
  2.13 PAUSE

  # X11
  11.65307 QUIT
  11.102 FULLSCREEN
  11.65362 UP
  11.65364 DOWN
  11.65361 LEFT
  11.65363 RIGHT
  11.122 PRIMARY
  11.120 SECONDARY
  11.99 TERTIARY
  11.65293 PAUSE
  
end

#------------------------------------------------------------------------------
# NES and SNES knockoff joysticks.
# Grrr, these seem to use the same PCB internally; they are not distinguishable.

USB Gamepad

  # For evdev.
  1.0x120 SECONDARY # X
  1.0x121 TERTIARY  # A
  1.0x122 SECONDARY # B
  1.0x123 PRIMARY   # Y
  1.0x124 PRIMARY   # Select -- This must be an action, since NES doesn't have X or Y.
  1.0x129 PAUSE     # Start
  1.0x128 PRIMARY   # L
  1.0x125 TERTIARY  # R
  3.0x0 LEFT RIGHT
  3.0x1 UP DOWN

  # For SDL.
  7.0 LEFT RIGHT
  7.1 UP DOWN
  7.3 LEFT RIGHT
  7.4 UP DOWN
  10.0 SECONDARY    # X
  10.1 TERTIARY     # A
  10.2 SECONDARY    # B
  10.3 PRIMARY      # Y
  10.4 PRIMARY      # L
  10.5 TERTIARY     # R
  10.8 PRIMARY      # Select
  10.9 PAUSE        # Start
  
end

#------------------------------------------------------------------------------
# PS3 joystick by BDA.

# For evdev.
BDA Pro Ex
  1.0x130 PRIMARY   # Square
  1.0x134 PRIMARY   # L1
  1.0x136 PRIMARY   # L2
  1.0x13a PRIMARY   # Left thumb
  1.0x131 SECONDARY # X
  1.0x133 SECONDARY # Delta
  1.0x132 TERTIARY  # O
  1.0x135 TERTIARY  # R1
  1.0x137 TERTIARY  # R2
  1.0x13b TERTIARY  # Right thumb
  1.0x139 PAUSE     # Start
  1.0x138 PAUSE     # Select
#  1.0x13c QUIT      # Heart
  3.0x0 LEFT RIGHT  # Left stick
  3.0x1 UP DOWN
  3.0x2 LEFT RIGHT # Right stick
  3.0x5 UP DOWN    # Right stick
  3.0x10 LEFT RIGHT
  3.0x11 UP DOWN
end

# For SDL. (Comes up with a different name, don't ask me why).
Pro Ex
  7.0 LEFT RIGHT
  7.1 UP DOWN
  7.2 LEFT RIGHT
  7.3 UP DOWN
  10.0 PRIMARY     # Square
  10.1 SECONDARY   # X
  10.2 TERTIARY    # O
  10.3 SECONDARY   # Delta
  10.4 PRIMARY     # L1
  10.5 TERTIARY    # R1
  10.6 PRIMARY     # L2
  10.7 TERTIARY    # R2
  10.8 PAUSE       # Select
  10.9 PAUSE       # Start
# 10.10            # Left stick
# 10.11            # Right stick
  10.12 QUIT       # Heart
end

#------------------------------------------------------------------------------
# Microsoft Xbox and Xbox 360 joysticks, with my userspace driver.
# Only evdev is provided here; my driver only runs on Linux.

Xbox Joystick
  1.0x133 PRIMARY    # X
  1.0x136 PRIMARY    # L
  1.0x130 SECONDARY  # A
  1.0x134 SECONDARY  # Y
  1.0x131 TERTIARY   # B
  1.0x139 TERTIARY   # R
  1.0x13b PAUSE      # Start
#  1.0x13a QUIT       # Back
  1.0x135 PRIMARY    # White
  1.0x132 TERTIARY   # Black
# 1.0x13d            # Left thumb
# 1.0x13e            # Right thumb
  3.0x0 LEFT RIGHT   # Left thumb horz
  3.0x1 UP DOWN      # Left thumb vert
  3.0x3 LEFT RIGHT   # Right thumb horz
  3.0x4 UP DOWN      # Right thumb vert
  3.0x10 LEFT RIGHT  # Dpad horz
  3.0x11 UP DOWN     # Dpad vert
end

Xbox 360 Joystick
  1.0x133 PRIMARY    # X
  1.0x138 PRIMARY    # LT
  1.0x136 PRIMARY    # LB
  1.0x130 SECONDARY  # A
  1.0x134 SECONDARY  # Y
  1.0x131 TERTIARY   # B
  1.0x137 TERTIARY   # RT
  1.0x139 TERTIARY   # RB
  1.0x13b PAUSE      # Start
#  1.0x13c QUIT       # Heart
# 1.0x13a            # Select
# 1.0x13d            # Left thumb
# 1.0x13e            # Right thumb
  3.0x0 LEFT RIGHT   # Left thumb horz
  3.0x1 UP DOWN      # Left thumb vert
  3.0x3 LEFT RIGHT   # Right thumb horz
  3.0x4 UP DOWN      # Right thumb vert
  3.0x10 LEFT RIGHT  # Dpad horz
  3.0x11 UP DOWN     # Dpad vert
end

# and the 360, as natively supported by modern linux
Microsoft X-Box 360 pad
  1.0x130 SECONDARY # south
  1.0x131 TERTIARY # east
  1.0x133 PRIMARY # west
  1.0x134 UNUSED # north
  1.0x136 UNUSED # l1
  1.0x137 UNUSED
  1.0x13a UNUSED
  1.0x13b PAUSE # start
  1.0x13c QUIT # heart
  1.0x13d UNUSED # lp
  1.0x13e UNUSED # rp
  3.0x0 UNUSED UNUSED
  3.0x1 UNUSED UNUSED
# 3.0x2 unused
  3.0x3 UNUSED UNUSED
  3.0x4 UNUSED UNUSED
# 3.0x5 unused
  3.0x10 LEFT RIGHT
  3.0x11 UP DOWN
end

#------------------------------------------------------------------------------
# Nintendo Wii Remotes, with my userspace driver.
# Only evdev is provided here; my driver only runs on Linux.

lamb
  1.0x101    SECONDARY # 1
  1.0x102    TERTIARY  # 2
  1.0x130    PRIMARY   # A
  1.0x131    PRIMARY   # B
  1.0x13a    QUIT      # -
  1.0x13b    PAUSE     # +
end
snowman
  1.0x101    SECONDARY # 1
  1.0x102    TERTIARY  # 2
  1.0x130    PRIMARY   # A
  1.0x131    PRIMARY   # B
  1.0x13a    QUIT      # -
  1.0x13b    PAUSE     # +
end

#------------------------------------------------------------------------
# Atari VCS gamepad

Atari Game Controller
  1.139 PAUSE # start
  1.172 QUIT # heart
  1.0x100 UNUSED
  1.0x130 SECONDARY # south
  1.0x131 TERTIARY # east
  1.0x133 PRIMARY # west
  1.0x134 UNUSED
  1.0x136 UNUSED # l1
  1.0x137 UNUSED # r1
  1.0x13d UNUSED # lp
  1.0x13e UNUSED # rp
  3.0x0 UNUSED UNUSED
  3.0x1 UNUSED UNUSED
# 3.0x2 unused
# 3.0x5 unused
# 3.0x9 unused
# 3.0xa unused
  3.0x10 LEFT RIGHT
  3.0x11 UP DOWN
# 3.0x28 unused
end

#---------------------------------------------------------------------
# Cheap PS2 knockoffs that I have 4 of them.

MY-POWER CO.,LTD. 2In1 USB Joystick
  1.0x120 UNUSED # north
  1.0x121 TERTIARY # east
  1.0x122 SECONDARY # south
  1.0x123 PRIMARY # west
  1.0x124 UNUSED # l1
  1.0x125 UNUSED # r1
  1.0x126 UNUSED # l2
  1.0x127 UNUSED # r2
  1.0x128 QUIT # select
  1.0x129 PAUSE # start
# heart is apparently not addressable
  1.0x12a UNUSED # lp
  1.0x12b UNUSED # rp
  3.0x0 LEFT RIGHT
  3.0x1 UP DOWN
# 3.0x2 unused
# 3.0x5 unused
  3.0x10 UNUSED UNUSED
  3.0x11 UNUSED UNUSED
# 3.0x28 unused
end

#-------------------------------------------------------------
# The nice Zelda-branded joystick

Bensussen Deutsch & Associates,Inc.(BDA) Core (Plus) Wired Controller
  1.0x130 PRIMARY # west
  1.0x131 SECONDARY # south
  1.0x132 TERTIARY # east
  1.0x133 UNUSED
  1.0x134 UNUSED
  1.0x135 UNUSED
  1.0x136 UNUSED
  1.0x137 UNUSED
  1.0x138 QUIT # minus (upper select)
  1.0x139 PAUSE # plus (upper start)
  1.0x13a UNUSED # lp
  1.0x13b UNUSED # rp
  1.0x13c PAUSE # home (lower start)
  1.0x13d QUIT # circle (lower select)
  3.0x0 UNUSED UNUSED
  3.0x1 UNUSED UNUSED
# 3.0x2 unused
# 3.0x5 unused
  3.0x10 LEFT RIGHT
  3.0x11 UP DOWN
end

#------------------------------------------------------------------------------
# Dummy devices, mentioned here only to prevent CTM from logging them.

A4Tech PS/2+USB Mouse
end
HD-Audio Generic HDMI/DP,pcm=*
end
Video Bus
end
Power Button
end

